#버블저렬(bubble sort)
# List_A=[3,7,2,9,1,5,6,4,8]
#사이클 1 =[3,2,7,1,5,6,4,8,9]
#사이클 2 =[2,3,1,5,6,4,7,8,9]

# def bubble_sort(_list: list):
#     for i in range(len(_list)-1):    #반복 사이클은 원소 개수 -1번
#         for j in range(len(_list)-1 -i):  #2개씩 비교하므로 -1 사이클마다 반복횟수 감소 -i
#             if _list[j] > _list[j+1]:    #
#                 tmp = _list[j]           #교환하기 위한 빈 그릇 tmp
#                 _list[j] = _list[j+1]
#                 _list[j+1] = tmp
#
#
# #버블 정렬 알고리즘
# # 1.리스트 A가 주어질 때 A[0] A[1]와 A[1] A[2]와 A[2] A[3]...A[n-2] 와 A[n-1]을 비교하여 근값은 오른쪽 작은 값은 왼쪽으로 교환해
# # 나간다.
# # 2.위의 정렬을 방식을 리스트 A의 원소 개수 -1번 반복하게 되는데,
# # 한번 사이클이 지날 때마다 가장 우측에 최대 값이 정렬하게 되며, 다음 사이클에서 비교 대상에서 제외시킨다.
#
#
# List_A = [3, 7, 2, 9, 1, 5, 6, 4, 8]
# bubble_sort(List_A)
# print(List_A)




#
# # 선택정렬
# #least = 4, j= 8
# def selection_sort(_list:list):
#     for i in range(len(_list)-1):
#         least = i
#
#         for j in range(i+1,len(_list)):
#             if _list[least] > _list[j]:
#                 least = j
#         tmp = _list[i]
#         _list[i] = _list[least]
#         _list[least] = tmp
#
#
# List_A = [3,7,2,9,1,5,6,4,8]
# selection_sort(List_A)
# print(List_A)







#삽입정렬
# List_A = [3,7,2,9,1,5,6,4,8]
# 1사이클 = [3,7,2,9,1,5,6,4,8]
# 2사이클 = [' ',3,7,,9,1,5,6,4,8]key=2

def Insertion_sort(_list:list):
    for i in range(1,len(_list)):
        key=_list[i]
        j=i-1

        while _list[j] > key and j >= 0:
            _list[j+1]=_list[j]
            j=j-1
            _list[j+1]=key
    return _list





List_A = [3,7,2,9,1,5,6,4,8]
Insertion_sort(List_A)
print(List_A)
